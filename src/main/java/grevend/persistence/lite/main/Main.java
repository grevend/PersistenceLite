package grevend.persistence.lite.main;

import grevend.persistence.lite.Persistence;
import grevend.persistence.lite.database.sql.SqlDatabaseBuilder;
import grevend.persistence.lite.entity.Attribute;
import grevend.persistence.lite.entity.Entity;
import grevend.persistence.lite.util.Option;
import grevend.persistence.lite.util.PrimaryKey;
import java.io.Serializable;
import java.sql.Connection;

public class Main {

  public static void main(String[] args) {
    try (var db = Persistence.databaseBuilder(SqlDatabaseBuilder.class, "postgres", 0)
        .setCredentials("postgres", "mypassword").build()) {
      Connection connection = db.createConnection();
      System.out.println(db.getMetaData(connection).isPresent() ? db.getMetaData(connection).get()
          .getJDBCMajorVersion() : "null");
      var dao = db.getDao(Artist.class);
      System.out.println(dao.retrieveAll());
      //System.out.println(dao.retrieveByAttributes(Map.of("id", 4)));
      //System.out.println(dao.create(new Artist(1000, "1000", "1000-bio", Option.empty(), Option.empty())));
      //System.out.println(dao.retrieveAll());
    } catch (Exception e) {
      e.printStackTrace();
    }
  }

  @Entity(name = "artist")
  private static class Artist implements Serializable {

    private static final long serialVersionUID = 6151647160255764536L;

    @PrimaryKey
    @Attribute(name = "id", autoGenerated = true)
    public int id;
    public String name, bio;
    public Option<Integer> verifier;
    public Option<Byte[]> image;

    protected Artist() {
    }

    public Artist(int id, String name, String bio, Option<Integer> verifier, Option<Byte[]> image) {
      this.id = id;
      this.name = name;
      this.bio = bio;
      this.verifier = verifier;
      this.image = image;
    }

    @Override
    public String toString() {
      return "Artist{" +
          "id=" + this.id +
          ", name='" + this.name + '\'' +
          ", bio='" + this.bio + '\'' +
          ", image=" + this.image +
          ", verifier=" + this.verifier +
          '}';
    }

  }

  @Entity(name = "artist2")
  private static class Artist2 {

    @PrimaryKey
    public int id_int;
    @PrimaryKey
    public String id_str;

    protected Artist2() {
    }

  }

}
